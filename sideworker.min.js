var SideWorker=function(){"use strict";const n=(n=!1)=>`\n${n&&"console.debug('SideWorker initialised.')"}\n\nconst ERROR_NOT_DEFINED = 'ERROR! FUNCTION NOT DEFINED!'\nconst SEPARATOR = ':'\nconst _split = arg => arg.split(SEPARATOR)\nconst _join = (...args) => args.join(SEPARATOR)\n\nfunction SideWorker() {\n  this.func = null\n  this.define = (name, strfunc) => {\n    const runner = new Function('return ' + strfunc)()\n\n    this[name] = (id, args) => {\n      self.postMessage(_join(name, id))\n\n      try {\n        const response = runner.apply(this, args)\n        self.postMessage([null, response])\n      } catch (err) {\n        self.postMessage([err])\n      }\n\n      this.func = null\n    }\n  }\n}\n\nconst worker = new SideWorker()\n\nself.addEventListener('message', (e) => {\n  if (!worker.func) {\n    worker.func = e.data\n\n    const [ name ] = _split(e.data)\n\n    if (!worker[name]) {\n      console.error(ERROR_NOT_DEFINED, name)\n    }\n  } else {\n    const func = worker.func\n    const [ name, id ] = _split(func)\n\n    worker.func = null\n\n    ${n&&'\n    if(name === \'define\') {\n      console.debug(`Defining "${e.data[0]}"`)\n    } else {\n      console.debug(`Calling "${name}" (id: ${id})`)\n    }'}\n\n    if (worker[name]) {\n      const data = (name === 'define' && !id) ? e.data : [id, e.data];\n      worker[name].apply(worker, data)\n    } else {\n      console.error(ERROR_NOT_DEFINED, worker[name])\n    }\n  }\n})\n`;return function({debug:e,init:t}={},...s){const r=URL.createObjectURL(new Blob([n(e)],{type:"text/javascript"}));this.worker=new Worker(r),URL.revokeObjectURL(r),this.func=null,this._cb=new Map,this.run={},this.callFunction=(n,...e)=>{this.worker.postMessage(n),this.worker.postMessage(e)},this.define=(n,e)=>{this.callFunction("define",n,e.toString()),this.run[n]=(...e)=>new Promise(((t,s)=>{const r=`${n}:${URL.createObjectURL(new Blob).split("/").pop()}`;this._cb.set(r,{resolve:t,reject:s}),this.callFunction(r,...e)}))},this.worker.addEventListener("message",(n=>{if(this.func){const[e,...t]=n.data,s=this._cb.get(this.func);e?s.reject(e):s.resolve(...t),this._cb.delete(this.func),this.func=null}else this.func=n.data})),t&&(this.define("init",t),this.run.init(s))}}();
